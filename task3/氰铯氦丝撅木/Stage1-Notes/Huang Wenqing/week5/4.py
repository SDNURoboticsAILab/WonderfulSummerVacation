### 已知  (x, y, θ)，求解 (θ1, θ2, θ3)
import numpy as np
import math  ##  atan2(y, x, /)


### 获取 等号左边的 [θ1, θ2, θ3]   矩阵
l1 = 5
l2 = 3
l3 = 1

###  方法一： 通过几何法  求解
def RRR_geometric(x, y, θ):    
    θ2 = np.arccos((x**2 + y**2 - l1**2 - l2**2)/(2*l1*l2))
    ψ = np.arccos((l2**2 - x**2 - y**2 - l1**2)/(-2 * l1 * np.sqrt(x**2 + y**2)))   
    if θ2 < 0:
        θ1 = math.atan2(y, x) +  ψ   ## np.arctan2(y,x) 也可
    else:
        θ1 = math.atan2(y, x) -  ψ
    θ = np.pi * θ / 180  ## 角度 换 弧度
    θ3 = θ - θ1 - θ2
    return [θ1, θ2, θ3]
    
### 方法二： 代数解
def RRR_algebraic(x, y, θ):
    θ2 = np.arccos((x**2 + y**2 - l1**2 - l2**2)/(2*l1*l2))
    
    k1 = l1 + l2 * np.cos(θ2)
    k2 = l2 * np.sin(θ2)
    θ1 = math.atan2(y, x) - math.atan2(k2, k1)  ## np.arctan2(y,x) 也可
    θ = np.pi * θ / 180  ## 角度 换 弧度
    θ3 = θ - θ1 - θ2
    return [θ1, θ2, θ3]

x0, y0, θ0 = -4, 0, 120
x1, y1, θ1 = -5, 5, 45
x2, y2, θ2 = 2, 3, 30
xf, yf, θf = 2, -3, 0

##  选择其中一种方法计算 即可
# 法1：几何法   代入
# θ_3col = [RRR_geometric(x0, y0, θ0),
#          RRR_geometric(x1, y1, θ1),RRR_geometric(x1, y1, θ1),
#          RRR_geometric(x2, y2, θ2),RRR_geometric(x2, y2, θ2),
#          RRR_geometric(xf, yf, θf),
#          [0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0]]   ## 注意 返回 结果那样，这里就不用中括号了
## 法2： 解析解   代入
θ_3col = [RRR_algebraic(x0, y0, θ0),
         RRR_algebraic(x1, y1, θ1),RRR_algebraic(x1, y1, θ1),
         RRR_algebraic(x2, y2, θ2),RRR_algebraic(x2, y2, θ2),
         RRR_algebraic(xf, yf, θf),
         [0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0],[0, 0, 0]] 
# print(θ_3col)
#######################################################
####  求解 A
Δt1 = 2 - 0
Δt2 = 4 - 2
Δt3 = 9 - 4

T = [[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [1, Δt1, Δt1**2, Δt1**3, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 1, Δt2, Δt2**2, Δt2**3, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 1, Δt3, Δt3**2, Δt3**3],
     [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2*Δt3, 3*Δt3**2],
     [0, 1, 2*Δt1, 3*Δt1**2, 0, -1, 0, 0, 0, 0, 0, 0],
     [0, 0, 2, 6*Δt1, 0, 0, -2, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 1, 2*Δt2, 3*Δt2**2, 0, -1, 0, 0],
     [0, 0, 0, 0, 0, 0, 2, 6*Δt2, 0, 0, -2, 0] ]

def getA(θ):   ## 这里  直接使用矩阵 
    A = np.dot(np.linalg.inv(T), θ)
    A = np.around(A, decimals = 2)  ## 结果 保留 到 小数点 后 两位
    return A 
    

print('θ_A：')
print(getA(θ_3col)) 

